>> any devide and conquer approach using O(log n):
	- in Binary tree :O(log N): happend when u will not have to traverse to the entire N for example BST mechanism if "Blanaced"
	- in sorting O(n log n): why?, n : comes from that u must traverse for each element to compare them in order to sort them and (log n ) from spliting the array into binary unites to compare
	

>> exponential may be 2^n or 10^n or 1/2^n  or x^2 : it means every n time the function branches x times for example, if our fun is f(n)=2^10 (like fibbonacie func): 
means that every recursion or (n) the function branches to 2 
